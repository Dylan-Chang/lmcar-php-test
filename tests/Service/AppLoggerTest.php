<?php

namespace Test\Service;

use App\Facade\Log;
use App\Ioc;
use PHPUnit\Framework\TestCase;
use App\Support\AppLogger;

/**
 * Class ProductHandlerTest
 */
class AppLoggerTest extends TestCase
{
    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        //初始化 注入Ioc容器
        //Ioc::register('log',function(){
          //  return new \App\Support\AppLogger('log4php');
        //});

        //初始化 注入Ioc容器
        //Ioc::register('log',function(){
        //  return new \App\Support\AppLogger('think-log');
        //});
    }

    /*
    public function testInfoLog()
    {
        $logger = new AppLogger('log4php');
        $logger->info('This is info log message');
    }
    */

    /**
     * 题目3 log4php日志测试
     * 使用简单工厂模式
     * ./vendor/bin/phpunit ./tests/Service/AppLoggerTest.php
     * @return void
     */
    public function testInfoLog(){
        //门面模式
        //$logger = Log::info('This is info log message');

        //工厂模式使用 创建实例时可传入工具
        $logger = new AppLogger('log4php');
        $logger->info('This is info log message');
        $this->expectOutputString('INFO - This is info log message\n');
    }

    /**
     * 题目3 think-log日志测试
     * ./vendor/bin/phpunit ./tests/Service/AppLoggerTest.php
     * @return void
     */
    public function testThinkLog(){
        //门面模式
        //$logger = Log::info('This is info log message');

        //工厂模式使用 创建实例时可传入工具
        $logger = new AppLogger('think-log');
        $logger->info('This is info log message');
        $this->expectOutputString('THIS IS INFO LOG MESSAGE');
    }


}